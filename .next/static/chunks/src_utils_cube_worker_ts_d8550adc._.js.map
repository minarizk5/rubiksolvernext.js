{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/minarizk/Downloads/rubiknext/src/utils/cube.worker.ts"],"sourcesContent":["// Web Worker for Rubik's Cube solving\n// This file will be loaded as a static worker\n\n// Define worker context type for TypeScript\nconst ctx: Worker = self as any;\n\n// Set up the onmessage handler\nctx.onmessage = function(e) {\n  try {\n    // Create a string-based implementation of the solve function\n    // This is a simplified version that won't be as efficient as the full library\n    // but allows us to avoid the complexity of loading external scripts in workers\n    ctx.postMessage({ \n      type: 'status', \n      message: 'Calculating solution...'\n    });\n    \n    // For demonstration purposes, we'll simulate a solution calculation\n    // with a short delay to show the UI is responsive during calculation\n    setTimeout(() => {\n      // In a real implementation, we would solve the cube here\n      // For now, we'll just return a plausible solution\n      const mockSolution = \"R U R' U' F' U F R U R' U'\";\n      \n      ctx.postMessage({ \n        type: 'solution',\n        success: true, \n        solution: mockSolution\n      });\n    }, 1500); // Simulate a 1.5 second calculation time\n  } catch (error: any) {\n    ctx.postMessage({ \n      type: 'error',\n      success: false, \n      error: error.message || 'Unknown error in worker'\n    });\n  }\n};\n\n// Required for TypeScript to recognize this as a module\nexport {}; "],"names":[],"mappings":"AAAA,sCAAsC;AACtC,8CAA8C;AAE9C,4CAA4C;;AAC5C,MAAM,MAAc;AAEpB,+BAA+B;AAC/B,IAAI,SAAS,GAAG,SAAS,CAAC;IACxB,IAAI;QACF,6DAA6D;QAC7D,8EAA8E;QAC9E,+EAA+E;QAC/E,IAAI,WAAW,CAAC;YACd,MAAM;YACN,SAAS;QACX;QAEA,oEAAoE;QACpE,qEAAqE;QACrE,WAAW;YACT,yDAAyD;YACzD,kDAAkD;YAClD,MAAM,eAAe;YAErB,IAAI,WAAW,CAAC;gBACd,MAAM;gBACN,SAAS;gBACT,UAAU;YACZ;QACF,GAAG,OAAO,yCAAyC;IACrD,EAAE,OAAO,OAAY;QACnB,IAAI,WAAW,CAAC;YACd,MAAM;YACN,SAAS;YACT,OAAO,MAAM,OAAO,IAAI;QAC1B;IACF;AACF","debugId":null}}]
}